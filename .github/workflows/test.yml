on: push
env:
  MIX_ENV: test
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Add ELIXIR_VERSION environment variable
      run: echo "ELIXIR_VERSION=$(grep -h 'elixir ' .tool-versions | awk '{ print $2 }')" >> $GITHUB_ENV

    - name: Add OTP_VERSION environment variable
      run: echo "OTP_VERSION=$(grep -h 'erlang ' .tool-versions | awk '{ print $2 }')" >> $GITHUB_ENV

    - name: Install Elixir & Erlang based on .tool-versions file
      uses: erlef/setup-beam@v1
      with:
        otp-version: ${{ env.OTP_VERSION }}
        elixir-version: ${{ env.ELIXIR_VERSION }}

    - name: Restore dependencies cache
      id: deps-cache
      uses: actions/cache@v2
      with:
        path: deps
        key: ${{ runner.os }}-deps-${{ hashFiles('**/mix.lock') }}
        restore-keys: |
          ${{ runner.os }}-deps-
    - name: Fetch dependencies
      if: steps.deps-cache.outputs.cache-hit != 'true'
      run: mix do deps.get, deps.compile, compile
    - run: mix format --check-formatted --dry-run

    - name: Restore build cache
      id: build-cache
      uses: actions/cache@v2
      with:
        path: _build
        key: ${{ runner.os }}-build-${{ hashFiles('**/mix.lock') }}
        restore-keys: |
          ${{ runner.os }}-build-
    - name: Compile dependencies
      if: steps.build-cache.outputs.cache-hit != 'true'
      run: mix deps.compile
    - run: mix credo


    - name: Execute the entire test suite
      run: mix test
